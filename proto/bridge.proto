syntax = "proto3";
package model;

option go_package = ".;model";

message ConvertJWTRequest {
  string data = 1;
  string keyId = 3;
}
message ConvertKeyPairRequest {
  string privateKey = 1;
  string certificate = 3;
  string password = 5;
}
message ConvertPKCS12Request {
  string pkcs12 = 1;
  string password = 3;
}
message ConvertPrivateKeyRequest {
  string privateKey = 1;
}
message ConvertPublicKeyRequest {
  string publicKey = 1;
}
message DecryptOAEPRequest {
  string ciphertext = 1;
  string label = 3;
  Hash hash = 5;
  string privateKey = 7;
}
message DecryptOAEPBytesRequest {
  bytes ciphertext = 1;
  string label = 3;
  Hash hash = 5;
  string privateKey = 7;
}
message DecryptPKCS1v15Request {
  string ciphertext = 1;
  string privateKey = 3;
}
message DecryptPKCS1v15BytesRequest {
  bytes ciphertext = 1;
  string privateKey = 3;
}
message DecryptPrivateKeyRequest {
  string privateKeyEncrypted = 1;
  string password = 3;
}
message EncryptOAEPRequest {
  string message = 1;
  string label = 3;
  Hash hash = 5;
  string publicKey = 7;
}
message EncryptOAEPBytesRequest {
  bytes message = 1;
  string label = 3;
  Hash hash = 5;
  string publicKey = 7;
}
message EncryptPKCS1v15Request {
  string message = 1;
  string publicKey = 3;
}
message EncryptPKCS1v15BytesRequest {
  bytes message = 1;
  string publicKey = 3;
}
message EncryptPrivateKeyRequest {
  string privateKey = 1;
  string password = 3;
  PEMCipher cipher = 5;
}
message GenerateRequest {
  int32 nBits = 1;
}
message HashRequest {
  string message = 1;
  Hash hash = 3;
}
message Base64Request {
  string message = 1;
}
message MetadataPrivateKeyRequest {
  string privateKey = 1;
}
message MetadataPublicKeyRequest {
  string publicKey = 1;
}
message SignPKCS1v15Request {
  string message = 1;
  Hash hash = 3;
  string privateKey = 5;
}
message SignPKCS1v15BytesRequest {
  bytes message = 1;
  Hash hash = 3;
  string privateKey = 5;
}
message SignPSSRequest {
  string message = 1;
  Hash hash = 3;
  SaltLength saltLength = 5;
  string privateKey = 7;
}
message SignPSSBytesRequest {
  bytes message = 1;
  Hash hash = 3;
  SaltLength saltLength = 5;
  string privateKey = 7;
}
message VerifyPKCS1v15Request {
  string signature = 1;
  string message = 3;
  Hash hash = 5;
  string publicKey = 7;
}
message VerifyPKCS1v15BytesRequest {
  bytes signature = 1;
  bytes message = 3;
  Hash hash = 5;
  string publicKey = 7;
}
message VerifyPSSRequest {
  string signature = 1;
  string message = 3;
  Hash hash = 5;
  SaltLength saltLength = 7;
  string publicKey = 9;
}
message VerifyPSSBytesRequest {
  bytes signature = 1;
  bytes message = 3;
  Hash hash = 5;
  SaltLength saltLength = 7;
  string publicKey = 9;
}

enum SaltLength {
  SALTLENGTH_UNSPECIFIED = 0;
  SALTLENGTH_AUTO = 1;
  SALTLENGTH_EQUALS_HASH = 2;
}

enum PEMCipher {
  PEMCIPHER_UNSPECIFIED = 0;
  PEMCIPHER_DES = 1;
  PEMCIPHER_3DES = 2;
  PEMCIPHER_AES128 = 3;
  PEMCIPHER_AES192 = 4;
  PEMCIPHER_AES256 = 5;
}

enum Hash {
  HASH_UNSPECIFIED = 0;
  HASH_MD5 = 1;
  HASH_SHA1 = 2;
  HASH_SHA224 = 3;
  HASH_SHA256 = 4;
  HASH_SHA384 = 5;
  HASH_SHA512 = 6;
}

////////////// RESPONSE BELOW THIS LINE ///////////////

message StringResponse {
  string output = 1;
  string error = 3;
}
message BytesResponse {
  bytes output = 1;
  string error = 3;
}
message BoolResponse {
  bool output = 1;
  string error = 3;
}
message PKCS12KeyPairResponse {
  PKCS12KeyPair output = 1;
  string error = 3;
}
message PKCS12KeyPair{
  string privateKey = 1;
  string publicKey = 2;
  string certificate = 3;
}
message KeyPairResponse {
  KeyPair output = 1;
  string error = 3;
}
message KeyPair{
  string privateKey = 1;
  string publicKey = 2;
}
message PrivateKeyInfoResponse {
  PrivateKeyInfo output = 1;
  string error = 3;
}
message PrivateKeyInfo{
  int64 bitLen = 1;
  int64 size = 3;
  string error = 5;
}
message PublicKeyInfoResponse {
  PublicKeyInfo output = 1;
  string error = 3;
}
message PublicKeyInfo{
  int64 bitLen = 1;
  int64 size = 3;
  int64 e = 5;
}
