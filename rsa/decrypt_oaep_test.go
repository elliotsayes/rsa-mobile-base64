package rsa

import (
	"testing"
)

func TestFastRSA_DecryptOAEP(t *testing.T) {
	privateKey:= `-----BEGIN PRIVATE KEY-----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-----END PRIVATE KEY-----`
	cipherTextOAEP := `lCx2oJNDKw8t113MDmhP8HNId13hgWBpoGOjOOOA5s0ORI4mW2DyJSoH526IG7aJMDADymV2dPu9Z+/+DWVVOqs8AMNHV2PBy9zyScMK2EQxCyWOvF4XYPQ8KO6g9gf8k1BoNU61grFCw1y8suf4lZAHpLlfVmvAWNajn7L2XjFmpOe7IeFZfftGxSh91i4p77Ce9zc8Y0HsIu84PPTwGSub29Adi/uz1dKJuF6gCq+OzxU8qv9p4LGbn5iGDlDURBgM/GVZcAP1eB0L2c6RSLNbQ+MQwkpvvG4NuddwfTzfB9S6wHryMjMX666LgWmu7GCcpaFoMoGHsv06CHXB8B3IyMv6vXbdDG0LgwKOReF9jlhc9UDcL2fqAuYfiNzYapWCIDC41VriiKr27QGqBG/N1y7dvU3NZvgeFyx8N5mPERaGnmyFOzudz3Vtl09fcVbjtSRlJa75w2RsZLuu6Z3HKdTVcJR1rXiaiX897qwsLh3xQECNdfc8OsSEfJx8F+SBQDfN5gRUe/i4FLab/RooIqzr9fDojFXWe4ZQOXiWo46oqVz9uxC/LorCVCvWsF9GNDtTlD6yUfx0CNt+/0YKGUQACfdGfdfiRIr3UTUN1IDAfMZAQVV84xV828XbgzgPEhu7bIeCOM4d6vJ4cFVGPfKOEAnO00Ik7WiaUkI=`

	instance := NewFastRSA()
	output, err := instance.DecryptOAEP(cipherTextOAEP, "", "sha256", privateKey)
	if err != nil {
		t.Fatal(err)
	}

	t.Log("output:", output)
}
